number', as.character(which(ave_spi$interval == max_int$interval)))
stps <- paste('During this interval the average number of steps was:',
as.character(round(max_int$steps, 2)))
minute <- paste('This interval began at minute:', as.character(max_int$minute_of_day))
cat(paste(interval, stps, minute, sep = '\n'))
max_int <- ave_spi[which.max(ave_spi$steps),]
interval <- paste('The largest average number of steps occurred during interval number',
as.character(which(ave_spi$interval == max_int$interval)))
stps <- paste('During this interval the average number of steps was:',
as.character(round(max_int$steps, 2)))
minute <- paste('This interval began at minute:',
as.character(max_int$minute_of_day))
cat(paste(interval, stps, minute, sep = '\n'))
max_int <- ave_spi[which.max(ave_spi$steps),]
interval <- paste('The largest average number of steps occurred during interval number',
as.character(which(ave_spi$interval == max_int$interval)))
stps <- paste('During this interval the average number of steps was',
as.character(round(max_int$steps, 2)))
minute <- paste('This interval began at minute',
as.character(max_int$minute_of_day))
cat(paste(interval, stps, minute, sep = '\n'))
515/60
(515/60-8)*60
hh <- max_int$minute_of_day%60
hh <- max_int$minute_of_day%%60
mm <- max_int$minute_of_day%%60
hh <- (max_int$minute_of_day - mm)/60
tme <-cat(as.character(hh), ':', as.character(mm), sep = '')
tme <- paste(as.character(hh), ':', as.character(mm))
tme <- paste(as.character(hh), ':', as.character(mm), sep = '')
max_int <- ave_spi[which.max(ave_spi$steps),]
mm <- max_int$minute_of_day%%60
hh <- (max_int$minute_of_day - mm)/60
tme <- paste(as.character(hh), ':', as.character(mm), sep = '')
interval <- paste('The largest average number of steps occurred during interval number',
as.character(which(ave_spi$interval == max_int$interval)))
stps <- paste('During this interval the average number of steps was',
as.character(round(max_int$steps, 2)))
minute <- paste('This interval began at minute',
as.character(max_int$minute_of_day), 'i.e.', tme)
hh <-
cat(paste(interval, stps, minute, sep = '\n'))
max_int <- ave_spi[which.max(ave_spi$steps),]
mm <- max_int$minute_of_day%%60
hh <- (max_int$minute_of_day - mm)/60
tme <- paste('(i.e. ', as.character(hh), ':', as.character(mm), ')', sep = '')
interval <- paste('The largest average number of steps occurred during interval number',
as.character(which(ave_spi$interval == max_int$interval)))
stps <- paste('During this interval the average number of steps was',
as.character(round(max_int$steps, 2)))
minute <- paste('This interval began at minute',
as.character(max_int$minute_of_day), tme)
hh <-
cat(paste(interval, stps, minute, sep = '\n'))
dates_NA <- sum(is.na(activity$date))
intervals_NA <- sum(is.na(activity$interval))
steps_NA <- sum(is.na(activity$steps))
steps_zero <- sum(activity$steps == 0, na.rm =TRUE)
dates_NA <- paste('Observations with activity$date == NA: ',
as.character(dates_NA))
intervals_NA <- paste('Observations with activity$interval == NA: ',
as.character(intervals_NA))
steps_NA <- paste('Observations with activity$steps == NA: ',
as.character(steps_NA))
steps_zero <- paste('Observations with activity$steps == 0: ',
as.character(steps_zero))
cat(paste(dates_NA, intervals_NA, steps_NA, steps_zero, sep = '\n'))
rm(dates_NA, intervals_NA, steps_NA, steps_zero)
filler <- function(interval, steps){
if(!is.na(steps))
result <- c(steps)
else
result <- ave_spi[ave_spi$interval == interval, ]$steps
return(result)
}
imputed_activity <- activity
imputed_activity$steps <- mapply(filler, imputed_activity$interval, imputed_activity$steps)
tot_imp_spd <- tapply(imputed_activity$steps, imputed_activity$date, sum, na.rm = TRUE)
tot_imp_spd <- data.frame(as.numeric(ymd(names(tot_imp_spd))), tot_imp_spd)
names(tot_imp_spd) <- c('numeric_date', 'steps')
hist(tot_imp_spd$steps, breaks = 20,
xlab = 'Number of Steps',
ylab = 'Number of Days',
main = '')
mean_spd <- round(mean(tot_imp_spd$steps))
median_spd <- round(median(tot_imp_spd$steps))
mean_spd <- paste("Mean steps per day:", as.character(mean_spd))
med_spd <- paste("Median steps per day:", as.character(median_spd))
cat(paste(mean_spd, med_spd, sep = '\n'))
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return('Weekend')
else return('Weekday')
}
imputed_activity$weekend <- sapply(as.Date(imputed_activity$date), weekend)
ave_imp_spi <- aggregate(steps ~ interval + minute_of_day + weekend,
data = imputed_activity, mean)
ggplot(ave_imp_spi, aes(interval, steps)) +
geom_line() + facet_grid(weekend ~ .) +
xlab("Minute of the Day") + ylab("Average Number of Steps")
mean_spd <- round(mean(tot_imp_spd$steps))
median_spd <- round(median(tot_imp_spd$steps))
mean_spd <- paste("Mean steps per day:", as.character(mean_spd))
med_spd <- paste("Median steps per day:", as.character(median_spd))
cat(paste(mean_spd, med_spd, sep = '\n'))
weekend <- function(date){
wkend <- c('Saturday', 'Sunday')
if(weekdays(date) %in% wkend) return('Weekend')
else return('Weekday')
}
imputed_activity$weekend <- sapply(as.Date(imputed_activity$date), weekend)
ave_imp_spi <- aggregate(steps ~ interval + minute_of_day + weekend,
data = imputed_activity, mean)
ggplot(ave_imp_spi, aes(interval, steps)) +
geom_line() + facet_grid(weekend ~ .) +
xlab("Minute of the Day") + ylab("Average Number of Steps")
https://rpubs.com/s3811315/912016
setwd("~/Documents/Courses/Data Science - Specialization/Reproducible Research/Reproducible-Research---Project-2")
read.csv('./repdata_data_StormDate.csv')
read.csv('./repdata_data_StormData.csv')
storm_data <- read.csv('./repdata_data_StormData.csv')
names(storm_data)
unique(storm_data$EVTYPE)
names(storm_data)
unique(storm_data$FATALITIES)
unique(storm_data$INJURIES)
unique(storm_data$WFO)
names(storm_data)
unique(storm_data$CROPDMG)
unique(storm_data$CROPDMGEXP)
unique(storm_data$PROPDMGEXP)
unique(storm_data$EVTYPE)
unique(storm_data$BGN_RANGE)
unique(storm_data$BGN_AZI)
unique(storm_data$BGN_LOCATI)
unique(storm_data$COUNTY)
unique(storm_data$COUNTYNAME)
unique(storm_data$COUNTY_END)
unique(storm_data$COUNTYENDN)
unique(storm_data$F)
unique(storm_data$MAG)
library(tidyr)
subset(storm_data, EVTYPE)
data.frame(storm_data$EVTYPE, storm_data$FATALITIES, storm_data$INJURIES, storm_data$CROPDMG, storm_data$PROPDMG)
names(data.frame(storm_data$EVTYPE, storm_data$FATALITIES, storm_data$INJURIES, storm_data$CROPDMG, storm_data$PROPDMG))
data.frame(EVTYPE = storm_data$EVTYPE, storm_data$FATALITIES, storm_data$INJURIES, storm_data$CROPDMG, storm_data$PROPDMG)
names(data.frame(storm_data$EVTYPE, storm_data$FATALITIES, storm_data$INJURIES, storm_data$CROPDMG, storm_data$PROPDMG))
names(data.frame(EVTYPE = storm_data$EVTYPE, storm_data$FATALITIES, storm_data$INJURIES, storm_data$CROPDMG, storm_data$PROPDMG))
data.frame(EVTYPE = storm_data$EVTYPE, FATALITIES = storm_data$FATALITIES, INJURIES = storm_data$INJURIES, CROPDMG = storm_data$CROPDMG, PROPDMG = storm_data$PROPDMG)
data <- data.frame(EVTYPE = storm_data$EVTYPE, FATALITIES = storm_data$FATALITIES, INJURIES = storm_data$INJURIES, CROPDMG = storm_data$CROPDMG, PROPDMG = storm_data$PROPDMG)
data_2 <- storm_data[,c(8, 23, 24, 25, 27)]
exists(data_2)
is.data.frame(data_2)
is.data.frame(data_3)
data_3
exists('data')
exists('data_2')
exists('data_3')
exists('data_2') && is.data.frame('data_2')
exists('data_2') && is.data.frame(get('data_2'))
columns <- c('EVTYPE', 'FATALITIES', 'INJURIES', 'CROPDMG', 'PROPDMG')
which(colnames('data') %in% columns)
colnames('data')
cnames('data')
names('data')
names(data)
which(names(storm_data) %in% columns)
rm(data, data_2)
rm(columns)
if !(exists('data') && is.data.frame(get('data'))){
storm_data <- read.csv(./repdata_data_StormData.csv)
}
columns <- c('EVTYPE', 'FATALITIES', 'INJURIES', 'CROPDMG', 'PROPDMG')
cols <- which(names(storm_data) %in% columns)
data <- storm_data[, cols]
rm(columns)
rm(data, data_2)
rm( cols)
if (!(exists('data') && is.data.frame(get('data')))){
storm_data <- read.csv(./repdata_data_StormData.csv)
}
columns <- c('EVTYPE', 'FATALITIES', 'INJURIES', 'CROPDMG', 'PROPDMG')
cols <- which(names(storm_data) %in% columns)
data <- storm_data[, cols]
rm( cols)
rm(data)
rm(columns)
if (!(exists('data') && is.data.frame(get('data')))){
storm_data <- read.csv('./repdata_data_StormData.csv')
}
columns <- c('EVTYPE', 'FATALITIES', 'INJURIES', 'CROPDMG', 'PROPDMG')
cols <- which(names(storm_data) %in% columns)
data <- storm_data[, cols]
rm(columns)
rm(cols)
rm(data)
if (!(exists('storm_data') && is.data.frame(get('storm_data')))){
storm_data <- read.csv('./repdata_data_StormData.csv')
}
columns <- c('EVTYPE', 'FATALITIES', 'INJURIES', 'CROPDMG', 'PROPDMG')
cols <- which(names(storm_data) %in% columns)
data <- storm_data[, cols]
fatalities <- aggregate(FATALITIES ~ EVTYPE, data, sum)
head(fatalities)
tail(fatalities)
fatalities <- subset(fatalities, FATALITIES != 0)
head(fatalities)
tail(fatalities)
fatalities <- aggregate(FATALITIES ~ toupper(EVTYPE), data, sum)
fatalities <- subset(fatalities, FATALITIES != 0)
if (!(exists('storm_data') && is.data.frame(get('storm_data')))){
storm_data <- read.csv('./repdata_data_StormData.csv')
}
columns <- c('EVTYPE', 'FATALITIES', 'INJURIES', 'CROPDMG', 'PROPDMG')
cols <- which(names(storm_data) %in% columns)
data <- storm_data[, cols]
data$EVTYPE <- toupper(data$EVTYPE)
fatalities <- aggregate(FATALITIES ~ EVTYPE, data, sum)
fatalities <- subset(fatalities, FATALITIES != 0)
head(fatalities)
tail(fatalities)
names(storm_data)
unique(storm_data$BGN_DATE)
storm_data$BGN_DATE <- ymd(storm_data$BGN_DATE)
sessionInfo()
library(lubridate)
storm_data$BGN_DATE <- ymd(storm_data$BGN_DATE)
as.Date(storm_data$BGN_DATE)
substr(storm_data$BGN_DATE, length(storm_data$BGN_DATE)-8, length(storm_data$BGN_DATE)-8)
storm_data <- read.csv('./repdata_data_StormData.csv')
substr(storm_data$BGN_DATE, length(storm_data$BGN_DATE)-8, length(storm_data$BGN_DATE)-8)
substr(storm_data$BGN_DATE, length(storm_data$BGN_DATE)-7, length(storm_data$BGN_DATE))
storm_data$BGN_DATE
length(storm_data$BGN_DATE)
length(storm_data[,5])
data <- storm_data
apply(data, MARGIN = 1, FUN = length(data$BGN_DATE))
apply(data, MARGIN = 1, FUN = nchar(data$BGN_DATE))
length(data[1, 'BGN_DATE'])
length(data[1, ]$BGN_DATE)
nchar(data[1, ]$BGN_DATE)
nchar(data$BGN_DATE)
substr(data$BGN_DATE, nchar(data$BGN_DATE)-7, nchar(data$BGN_DATE))
substr(data$BGN_DATE, 1, nchar(data$BGN_DATE)-7)
substr(data$BGN_DATE, 1, nchar(data$BGN_DATE)-8)
ymd(substr(data$BGN_DATE, 1, nchar(data$BGN_DATE)-8))
substr(data$BGN_DATE, 1, nchar(data$BGN_DATE)-8)
dmy(substr(data$BGN_DATE, 1, nchar(data$BGN_DATE)-8))
substr(data$BGN_DATE, 1, nchar(data$BGN_DATE)-8)
mdy(substr(data$BGN_DATE, 1, nchar(data$BGN_DATE)-8))
mdy(substr(data$END_DATE, 1, nchar(data$END_DATE)-8))
substr(data$END_DATE, 1, nchar(data$END_DATE)-8)
data$END_DATE
unique(data$END_DATE)
library(tidyr)
library(lubridate)
if (!(exists('storm_data') && is.data.frame(get('storm_data')))){
storm_data <- read.csv('./repdata_data_StormData.csv')
}
data <- storm_data
data$BGN_DATE <- mdy(substr(data$BGN_DATE, 1, nchar(data$BGN_DATE)-8))
columns <- c('BGN_DATE', 'EVTYPE', 'FATALITIES', 'INJURIES', 'CROPDMG', 'PROPDMG')
cols <- which(names(storm_data) %in% columns)
data <- storm_data[, cols]
data$EVTYPE <- toupper(data$EVTYPE)
fatalities <- aggregate(FATALITIES ~ EVTYPE, data, sum)
fatalities <- subset(fatalities, FATALITIES != 0)
injuries <- aggregate(INJURIES ~ EVTYPE, data, sum)
injuries <- subset(injuries, INJURIES != 0)
head(fatalities)
head(injuries)
rm(data, injuries, fatalities, cols, columns)
library(tidyr)
library(lubridate)
if (!(exists('storm_data') && is.data.frame(get('storm_data')))){
storm_data <- read.csv('./repdata_data_StormData.csv')
}
data <- storm_data
data$BGN_DATE <- mdy(substr(data$BGN_DATE, 1, nchar(data$BGN_DATE)-8))
columns <- c('BGN_DATE', 'EVTYPE', 'FATALITIES', 'INJURIES', 'CROPDMG', 'PROPDMG')
cols <- which(names(storm_data) %in% columns)
data <- storm_data[, cols]
data$EVTYPE <- toupper(data$EVTYPE)
fatalities <- aggregate(FATALITIES ~ EVTYPE, data, sum)
fatalities <- subset(fatalities, FATALITIES != 0)
injuries <- aggregate(INJURIES ~ EVTYPE, data, sum)
injuries <- subset(injuries, INJURIES != 0)
crop_damage <- aggregate(CROPDMG ~ EVTYPE, data, sum)
crop_damage <- subset(crop_damage, CROPDMG != 0)
prop_damage <- aggregate(PROPDMG ~ EVTYPE, data, sum)
prop_damage <- subset(prop_damage, PROPDMG != 0)
View(prop_damage)
View(injuries)
View(fatalities)
View(crop_damage)
fatalities[order(FATALITIES),]
fatalities[order(fatalities$FATALITIES),]
fatalities[order(-fatalities$FATALITIES),]
head(fatalities[order(-fatalities$FATALITIES),])
library(tidyr)
library(lubridate)
if (!(exists('storm_data') && is.data.frame(get('storm_data')))){
storm_data <- read.csv('./repdata_data_StormData.csv')
}
data <- storm_data
data$BGN_DATE <- mdy(substr(data$BGN_DATE, 1, nchar(data$BGN_DATE)-8))
columns <- c('BGN_DATE', 'EVTYPE', 'FATALITIES', 'INJURIES', 'CROPDMG', 'PROPDMG')
cols <- which(names(storm_data) %in% columns)
data <- storm_data[, cols]
data$EVTYPE <- toupper(data$EVTYPE)
fatalities <- aggregate(FATALITIES ~ EVTYPE, data, sum)
fatalities <- subset(fatalities, FATALITIES != 0)
fatalities[order(-fatalities$FATALITIES),]
injuries <- aggregate(INJURIES ~ EVTYPE, data, sum)
injuries <- subset(injuries, INJURIES != 0)
injuries[order(-injuries$INJURIES),]
crop_damage <- aggregate(CROPDMG ~ EVTYPE, data, sum)
crop_damage <- subset(crop_damage, CROPDMG != 0)
crop_damage[order(-crop_damage$CROPDMG),]
prop_damage <- aggregate(PROPDMG ~ EVTYPE, data, sum)
prop_damage <- subset(prop_damage, PROPDMG != 0)
prop_damage[order(-prop_damage$PROPDMG),]
library(tidyr)
library(lubridate)
if (!(exists('storm_data') && is.data.frame(get('storm_data')))){
storm_data <- read.csv('./repdata_data_StormData.csv')
}
data <- storm_data
data$BGN_DATE <- mdy(substr(data$BGN_DATE, 1, nchar(data$BGN_DATE)-8))
columns <- c('BGN_DATE', 'EVTYPE', 'FATALITIES', 'INJURIES', 'CROPDMG', 'PROPDMG')
cols <- which(names(storm_data) %in% columns)
data <- storm_data[, cols]
data$EVTYPE <- toupper(data$EVTYPE)
fatalities <- aggregate(FATALITIES ~ EVTYPE, data, sum)
fatalities <- subset(fatalities, FATALITIES != 0)
fatalities[order(-fatalities$FATALITIES),]
injuries <- aggregate(INJURIES ~ EVTYPE, data, sum)
injuries <- subset(injuries, INJURIES != 0)
injuries <- injuries[order(-injuries$INJURIES),]
crop_damage <- aggregate(CROPDMG ~ EVTYPE, data, sum)
crop_damage <- subset(crop_damage, CROPDMG != 0)
crop_damage <- crop_damage[order(-crop_damage$CROPDMG),]
prop_damage <- aggregate(PROPDMG ~ EVTYPE, data, sum)
prop_damage <- subset(prop_damage, PROPDMG != 0)
prop_damage <- prop_damage[order(-prop_damage$PROPDMG),]
library(tidyr)
library(lubridate)
if (!(exists('storm_data') && is.data.frame(get('storm_data')))){
storm_data <- read.csv('./repdata_data_StormData.csv')
}
data <- storm_data
data$BGN_DATE <- mdy(substr(data$BGN_DATE, 1, nchar(data$BGN_DATE)-8))
columns <- c('BGN_DATE', 'EVTYPE', 'FATALITIES', 'INJURIES', 'CROPDMG', 'PROPDMG')
cols <- which(names(storm_data) %in% columns)
data <- storm_data[, cols]
data$EVTYPE <- toupper(data$EVTYPE)
fatalities <- aggregate(FATALITIES ~ EVTYPE, data, sum)
fatalities <- subset(fatalities, FATALITIES != 0)
fatalities <- fatalities[order(-fatalities$FATALITIES),]
injuries <- aggregate(INJURIES ~ EVTYPE, data, sum)
injuries <- subset(injuries, INJURIES != 0)
injuries <- injuries[order(-injuries$INJURIES),]
crop_damage <- aggregate(CROPDMG ~ EVTYPE, data, sum)
crop_damage <- subset(crop_damage, CROPDMG != 0)
crop_damage <- crop_damage[order(-crop_damage$CROPDMG),]
prop_damage <- aggregate(PROPDMG ~ EVTYPE, data, sum)
prop_damage <- subset(prop_damage, PROPDMG != 0)
prop_damage <- prop_damage[order(-prop_damage$PROPDMG),]
head(fatalities)
head(injuries)
head(crop_damage)
head(prop_damage)
prop_damage <- aggregate(damage = PROPDMG ~ EVTYPE, data, sum)
prop_damage <- aggregate((damage = PROPDMG) ~ EVTYPE, data, sum)
prop_damage <- aggregate(PROPDMG) ~ EVTYPE, data, sum)
prop_damage <- aggregate(PROPDMG ~ EVTYPE, data, sum)
names(prop_damage$PROPDMG) <- 'damage'
names(prop_damage)
library(tidyr)
library(lubridate)
if (!(exists('storm_data') && is.data.frame(get('storm_data')))){
storm_data <- read.csv('./repdata_data_StormData.csv')
}
data <- storm_data
data$BGN_DATE <- mdy(substr(data$BGN_DATE, 1, nchar(data$BGN_DATE)-8))
columns <- c('BGN_DATE', 'EVTYPE', 'FATALITIES', 'INJURIES', 'CROPDMG', 'PROPDMG')
cols <- which(names(storm_data) %in% columns)
data <- storm_data[, cols]
data$EVTYPE <- toupper(data$EVTYPE)
fatalities <- aggregate(FATALITIES ~ EVTYPE, data, sum)
fatalities <- subset(fatalities, FATALITIES != 0)
fatalities <- fatalities[order(-fatalities$FATALITIES),]
injuries <- aggregate(INJURIES ~ EVTYPE, data, sum)
injuries <- subset(injuries, INJURIES != 0)
injuries <- injuries[order(-injuries$INJURIES),]
crop_damage <- aggregate(CROPDMG ~ EVTYPE, data, sum)
names(crop_damage)[2] <- 'DAMAGE'
crop_damage <- subset(crop_damage, CROPDMG != 0)
crop_damage <- crop_damage[order(-crop_damage$CROPDMG),]
prop_damage <- aggregate(PROPDMG ~ EVTYPE, data, sum)
names(prop_damage)[2] <- 'DAMAGE'
prop_damage <- subset(prop_damage, PROPDMG != 0)
prop_damage <- prop_damage[order(-prop_damage$PROPDMG),]
total_damage <- rbind(crop_damage, prop_damage)
total_damage <- total_damage[order(-total_damage$DAMAGE),]
library(tidyr)
library(lubridate)
if (!(exists('storm_data') && is.data.frame(get('storm_data')))){
storm_data <- read.csv('./repdata_data_StormData.csv')
}
data <- storm_data
data$BGN_DATE <- mdy(substr(data$BGN_DATE, 1, nchar(data$BGN_DATE)-8))
columns <- c('BGN_DATE', 'EVTYPE', 'FATALITIES', 'INJURIES', 'CROPDMG', 'PROPDMG')
cols <- which(names(storm_data) %in% columns)
data <- storm_data[, cols]
data$EVTYPE <- toupper(data$EVTYPE)
fatalities <- aggregate(FATALITIES ~ EVTYPE, data, sum)
fatalities <- subset(fatalities, FATALITIES != 0)
fatalities <- fatalities[order(-fatalities$FATALITIES),]
injuries <- aggregate(INJURIES ~ EVTYPE, data, sum)
injuries <- subset(injuries, INJURIES != 0)
injuries <- injuries[order(-injuries$INJURIES),]
crop_damage <- aggregate(CROPDMG ~ EVTYPE, data, sum)
names(crop_damage)[2] <- 'DAMAGE'
crop_damage <- subset(crop_damage, CROPDMG != 0)
crop_damage <- crop_damage[order(-crop_damage$DAMAGE),]
prop_damage <- aggregate(PROPDMG ~ EVTYPE, data, sum)
names(prop_damage)[2] <- 'DAMAGE'
prop_damage <- subset(prop_damage, PROPDMG != 0)
prop_damage <- prop_damage[order(-prop_damage$DAMAGE),]
total_damage <- rbind(crop_damage, prop_damage)
total_damage <- total_damage[order(-total_damage$DAMAGE),]
rm(prop_damage, crop_damage, fatalities, injuries, total_damage)
library(tidyr)
library(lubridate)
if (!(exists('storm_data') && is.data.frame(get('storm_data')))){
storm_data <- read.csv('./repdata_data_StormData.csv')
}
data <- storm_data
data$BGN_DATE <- mdy(substr(data$BGN_DATE, 1, nchar(data$BGN_DATE)-8))
columns <- c('BGN_DATE', 'EVTYPE', 'FATALITIES', 'INJURIES', 'CROPDMG', 'PROPDMG')
cols <- which(names(storm_data) %in% columns)
data <- storm_data[, cols]
data$EVTYPE <- toupper(data$EVTYPE)
fatalities <- aggregate(FATALITIES ~ EVTYPE, data, sum)
fatalities <- subset(fatalities, FATALITIES != 0)
fatalities <- fatalities[order(-fatalities$FATALITIES),]
injuries <- aggregate(INJURIES ~ EVTYPE, data, sum)
injuries <- subset(injuries, INJURIES != 0)
injuries <- injuries[order(-injuries$INJURIES),]
crop_damage <- aggregate(CROPDMG ~ EVTYPE, data, sum)
names(crop_damage)[2] <- 'DAMAGE'
crop_damage <- subset(crop_damage, CROPDMG != 0)
crop_damage <- crop_damage[order(-crop_damage$DAMAGE),]
prop_damage <- aggregate(PROPDMG ~ EVTYPE, data, sum)
names(prop_damage)[2] <- 'DAMAGE'
prop_damage <- subset(prop_damage, PROPDMG != 0)
prop_damage <- prop_damage[order(-prop_damage$DAMAGE),]
total_damage <- rbind(crop_damage, prop_damage)
total_damage <- total_damage[order(-total_damage$DAMAGE),]
library(tidyr)
library(lubridate)
if (!(exists('storm_data') && is.data.frame(get('storm_data')))){
storm_data <- read.csv('./repdata_data_StormData.csv')
}
data <- storm_data
data$BGN_DATE <- mdy(substr(data$BGN_DATE, 1, nchar(data$BGN_DATE)-8))
columns <- c('BGN_DATE', 'EVTYPE', 'FATALITIES', 'INJURIES', 'CROPDMG', 'PROPDMG')
cols <- which(names(storm_data) %in% columns)
data <- storm_data[, cols]
data$EVTYPE <- toupper(data$EVTYPE)
fatalities <- aggregate(FATALITIES ~ EVTYPE, data, sum)
fatalities <- subset(fatalities, FATALITIES != 0)
fatalities <- fatalities[order(-fatalities$FATALITIES),]
injuries <- aggregate(INJURIES ~ EVTYPE, data, sum)
injuries <- subset(injuries, INJURIES != 0)
injuries <- injuries[order(-injuries$INJURIES),]
crop_damage <- aggregate(CROPDMG ~ EVTYPE, data, sum)
names(crop_damage)[2] <- 'DAMAGE'
crop_damage <- subset(crop_damage, DAMAGE != 0)
crop_damage <- crop_damage[order(-crop_damage$DAMAGE),]
prop_damage <- aggregate(PROPDMG ~ EVTYPE, data, sum)
names(prop_damage)[2] <- 'DAMAGE'
prop_damage <- subset(prop_damage, DAMAGE != 0)
prop_damage <- prop_damage[order(-prop_damage$DAMAGE),]
total_damage <- rbind(crop_damage, prop_damage)
total_damage <- total_damage[order(-total_damage$DAMAGE),]
head(total_damage)
tail(total_damage)
barplot(head(total_damage))
head_total_damage = head(total_damage)
barplot(head_total_damage)
head_total_damage = head(total_damage)
barplot(head_total_damage$DAMAGE)
barplot(head_total_damage$DAMAGE ~ head_total_damage$EVTYPE)
head_total_damage = head(total_damage, 5)
barplot(head_total_damage$DAMAGE ~ head_total_damage$EVTYPE)
barplot(head_total_damage$DAMAGE ~ head_total_damage$EVTYPE, xlab = 'Event Type', ylab = 'Damage')
ggplot(head_total_damage)#$DAMAGE ~ head_total_damage$EVTYPE, xlab = 'Event Type', ylab = 'Damage')
library(ggplot2)
ggplot(head_total_damage)#$DAMAGE ~ head_total_damage$EVTYPE, xlab = 'Event Type', ylab = 'Damage')
ggplot(head_total_damage) + geom_bar()
ggplot(head_total_damage, aes(EVTYPE,DAMAGE) + geom_bar()
s
ggplot(head_total_damage, aes(EVTYPE,DAMAGE)) + geom_bar()
ggplot(head_total_damage) + geom_bar(aes(EVTYPE,DAMAGE))
ggplot(head_total_damage) + geom_bar(aes(head_total_damage$EVTYPE,head_total_damage$DAMAGE))
ggplot(head_total_damage) + geom_bar(aes(EVTYPE, DAMAGE))
ggplot(head_total_damage$DAMAGE, aes(EVTYPE)) + geom_bar()
ggplot(head_total_damage, aes(EVTYPE)) + geom_bar()
ggplot(data.frame(head_total_damage$DAMAGE), aes(EVTYPE)) + geom_bar()
ggplot(head_total_damage, aes(EVTYPE)) + geom_bar()
